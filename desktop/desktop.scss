/// str-split function found at: https://github.com/sass-projects/stringy/blob/master/src/scss/_str-split.scss
/// License: MIT

/// String split
///
/// Splits a String into a list of substrings using `$separator`.
/// If separator is omitted, the list returned contains one element consisting of the entire string.
/// If separator is an empty string, str is converted to a list of all characters.
/// Integer specifying a limit on the number of splits to be found.
/// The split method still splits on every match of separator, but it truncates the returned list to at most limit elements.
///
/// @param {string}  $string
/// @param {string}  $separator
/// @param {$number} $limit
///
/// @return {list}
///
/// @author pascalduez https://gist.github.com/pascalduez/065e560c6314c7e9d7f8

@function str-split($string, $separator: null, $limit: null) {
  $string: unquote($string);

  @if type-of($string) != "string" {
    @error "`str-split` function expecting a string for $string; #{type-of($string)} given.";
  }

  $result: zip(());

  @if not $separator {
    @return ($string);
  }

  @if $separator == "" {
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }

    @return $result;
  }

  $running: true;
  $progress: $string;
  $length: str-length($separator);

  @while $running {
    $index: str-index($progress, $separator);
    @if $index {
      $result: append($result, str-slice($progress, 1, ($index - 1)));
      $progress: str-slice($progress, ($index + $length));
    } @else {
      $running: false;
    }
  }

  $result: append($result, $progress);

  @if $limit and $limit > 0 {
    $limit: if($limit > length($result), length($result), $limit);
    $return: ();
    @for $i from 1 through $limit {
      $return: append($return, nth($result, $i));
    }

    @return $return;
  }

  @return $result;
}

$values: $blog_category;
$split-values: str-split($values, ",");
@each $value in $split-values {
  .category-#{$value} {
    @extend %blog-category;
  }
}

$values: $blog_tag;
$split-values: str-split($values, "|");
@each $value in $split-values {
  .tag-#{$value} {
    @extend %blog-tag;
  }
}

.comments-heading {
  display: none;
}

%blog-tag,
%blog-category {
  .topic-timeline {
    display: none;
  }

  .blog-image-container {
    text-align: center;
    .blog-image {
      background-position: center center;
      background-repeat: no-repeat;
      background-size: contain;
      height: 440px;
      margin-bottom: 1em;
      @if $image_display_style == "responsive crop" {
        background-size: cover;
        width: 100%;
      }
    }
  }

  .topic-body {
    width: 100%;
  }

  .topic-avatar {
    height: 20px;
    width: 20px;
    background: none;
    img.avatar {
      height: 20px;
      width: 20px;
    }

    .avatar-flair {
      background-size: 8px 8px;
      width: 10px;
      height: 10px;
      top: unset;
      bottom: -5px;
      right: -3px;
      .d-icon {
        height: 0.45em;
        width: 0.45em;
      }
    }
  }

  .topic-map.--bottom {
    display: none !important;
  }

  #post_1 {
    .topic-body {
      padding-top: 8px;
      border-top: none;

      &.highlighted {
        animation: none;
      }

      .topic-meta-data {
        flex-direction: column;
        align-items: unset;
        padding: 0;
        margin-left: 6px;
        margin-bottom: 2px;

        .post-infos {
          justify-content: space-between;
          .post-info.edits {
            order: 1;
          }
        }
      }
      .contents {
        border-top: 1px solid var(--primary-low);
        margin-left: 0px;
        padding: 0px;
      }
    }
    .topic-map.--op {
      padding-left: 0;
      .comments-heading {
        display: block;
        width: 100%;
        margin-top: 1em;
      }
      .topic-map__users-list {
        display: none;
      }
    }

    .cooked {
      big {
        font-size: 2rem;
        line-height: 2rem;
        letter-spacing: 1px;
        display: inline-block;
        font-family: Georgia;
      }

      & > p:first-child + div.lightbox-wrapper {
        display: none;
        & + p {
          margin-top: -15px;
        }
      }

      & > p img:not(.emoji) {
        display: none;
      }

      & > p ~ p img:not(.emoji) {
        display: block;
      }
    }
  }

  .post-infos img.avatar {
    height: 20px;
    width: 20px;
  }

  .topic-status-info,
  .topic-timer-info,
  .topic-area > .loading-container,
  .small-action .small-action-desc {
    width: 100%;
    max-width: 100%;
  }

  .post-notice {
    max-width: 519px;
    font-size: var(--font-down-2);
  }

  .small-action {
    font-size: 0.75em;
    .small-action-desc {
      max-width: 500px;
      .small-action-contents {
        display: flex;
        align-items: center;
        .avatar {
          height: 15px;
          width: 15px;
        }
      }
    }
  }

  // CSS below taken from Simon's original Blog Post plugin
  #topic-title h1 {
    font-size: 2.5em;
  }
  #topic-title a.edit-topic .d-icon {
    font-size: 0.5em;
  }

  .topic-meta-data {
    font-size: small;
  }

  .cooked {
    padding: 0.5em 1em;
  }

  .topic-post {
    .topic-body {
      margin-left: 0 !important;   // remove Discourse's left gutter
      padding-left: 0 !important;
      max-width: 720px;            // was 500px; widen so it doesn’t look squeezed
    }
    &:first-child {
      font-size: 1.25em;
      line-height: 1.4;
      padding-bottom: 0;
      padding-top: 4px;

      .topic-avatar {
        padding-top: 4px;
        position: static !important;
        border-top: none;
      }

      .topic-body {
        max-width: unset;
      }

      .cooked {
        padding: 0;
      }

      nav.post-controls .actions,
      .topic-map,
      .post-admin-menu {
        font-size: 14px;
      }

      figure {
        margin: 0;
      }

      figcaption {
        margin-top: -16px;
        font-size: 0.8em;
        font-weight: bold;
      }

      blockquote {
        background: var(--primary-very-low);
        color: var(--primary-high);
        border-left: 10px solid var(--primary-low-mid);
        padding: 0.5em 10px;
      }
      blockquote:before {
        color: var(--primary-low-mid);
        content: open-quote;
        font-size: 4em;
        line-height: 0.1em;
        vertical-align: -0.4em;
      }
      blockquote p {
        display: inline;
      }
    }
  }

  // Hide the timeline / progress in certain cases
  .timeline-toggle,
  #topic-progress-wrapper.docked,
  .timeline-container.timeline-docked {
    display: none !important;
  }

  .container.posts {
    justify-content: center;
    grid-template-columns: 65% 5%;
    &.row {
      width: 750px;
    }
    .topic-navigation {
      .d-toc-main {
        min-width: 11.25em;
      }
    }
  }
  #topic-title {
    display: flex;
    justify-content: center;
    .title-wrapper {
      width: 70%;
      .topic-category {
        margin-top: 0.25em;
      }
    }
  }
  .topic-area > .loading-container {
    max-width: 750px;  //tony (was 500)
  }

  @media screen and (max-width: 1350px) {
    .container.posts {
      justify-content: center;
      grid-template-columns: 65% 15%;
      & > .row {
        width: unset;
      }
      .topic-navigation {
        margin-left: 1em;
      }
    }
    #topic-title {
      .title-wrapper {
        width: 80%;
      }
    }
  }

  @media screen and (max-width: 924px) {
    .container.posts {
      grid-template-columns: 100%;
    }
    #topic-title {
      justify-content: left;
    }
  }
}

// TONY UPDATES HERE


.cooked h1 {
  background-color: black;
  color: white;
  padding: 0.25em 0.5em;   // optional, gives spacing so text isn’t jammed
  margin: 1em 0;           // space outside the box (1em above and below, 0 on the sides)
 
}
